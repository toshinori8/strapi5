"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@aws-sdk+signature-v4-multi-region@3.750.0";
exports.ids = ["vendor-chunks/@aws-sdk+signature-v4-multi-region@3.750.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@aws-sdk+signature-v4-multi-region@3.750.0/node_modules/@aws-sdk/signature-v4-multi-region/dist-cjs/index.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@aws-sdk+signature-v4-multi-region@3.750.0/node_modules/@aws-sdk/signature-v4-multi-region/dist-cjs/index.js ***!
  \*****************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  SignatureV4MultiRegion: () => SignatureV4MultiRegion,\n  signatureV4CrtContainer: () => signatureV4CrtContainer\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/SignatureV4MultiRegion.ts\nvar import_middleware_sdk_s3 = __webpack_require__(/*! @aws-sdk/middleware-sdk-s3 */ \"(rsc)/./node_modules/.pnpm/@aws-sdk+middleware-sdk-s3@3.750.0/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/index.js\");\n\n// src/signature-v4-crt-container.ts\nvar signatureV4CrtContainer = {\n  CrtSignerV4: null\n};\n\n// src/SignatureV4MultiRegion.ts\nvar SignatureV4MultiRegion = class {\n  static {\n    __name(this, \"SignatureV4MultiRegion\");\n  }\n  sigv4aSigner;\n  sigv4Signer;\n  signerOptions;\n  constructor(options) {\n    this.sigv4Signer = new import_middleware_sdk_s3.SignatureV4S3Express(options);\n    this.signerOptions = options;\n  }\n  async sign(requestToSign, options = {}) {\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\")\n        throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().sign(requestToSign, options);\n    }\n    return this.sigv4Signer.sign(requestToSign, options);\n  }\n  /**\n   * Sign with alternate credentials to the ones provided in the constructor.\n   */\n  async signWithCredentials(requestToSign, credentials, options = {}) {\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\")\n        throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().signWithCredentials(requestToSign, credentials, options);\n    }\n    return this.sigv4Signer.signWithCredentials(requestToSign, credentials, options);\n  }\n  async presign(originalRequest, options = {}) {\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\")\n        throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().presign(originalRequest, options);\n    }\n    return this.sigv4Signer.presign(originalRequest, options);\n  }\n  async presignWithCredentials(originalRequest, credentials, options = {}) {\n    if (options.signingRegion === \"*\") {\n      throw new Error(\"Method presignWithCredentials is not supported for [signingRegion=*].\");\n    }\n    return this.sigv4Signer.presignWithCredentials(originalRequest, credentials, options);\n  }\n  getSigv4aSigner() {\n    if (!this.sigv4aSigner) {\n      let CrtSignerV4 = null;\n      try {\n        CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\n        if (typeof CrtSignerV4 !== \"function\")\n          throw new Error();\n      } catch (e) {\n        e.message = `${e.message}\nPlease check whether you have installed the \"@aws-sdk/signature-v4-crt\" package explicitly. \nYou must also register the package by calling [require(\"@aws-sdk/signature-v4-crt\");] or an ESM equivalent such as [import \"@aws-sdk/signature-v4-crt\";]. \nFor more information please go to https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt`;\n        throw e;\n      }\n      this.sigv4aSigner = new CrtSignerV4({\n        ...this.signerOptions,\n        signingAlgorithm: 1\n      });\n    }\n    return this.sigv4aSigner;\n  }\n};\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (0);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF3cy1zZGsrc2lnbmF0dXJlLXY0LW11bHRpLXJlZ2lvbkAzLjc1MC4wL25vZGVfbW9kdWxlcy9AYXdzLXNkay9zaWduYXR1cmUtdjQtbXVsdGktcmVnaW9uL2Rpc3QtY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsMkJBQTJCO0FBQ3ZGO0FBQ0E7QUFDQSw4QkFBOEIsa0NBQWtDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsNEZBQTRGO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxrQkFBa0IsYUFBYTs7QUFFbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQTtBQUNBLCtCQUErQixtQkFBTyxDQUFDLDBKQUE0Qjs7QUFFbkU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUix1QkFBdUI7QUFDdkI7QUFDQSxvRkFBb0YsbUVBQW1FO0FBQ3ZKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU0sQ0FHTCIsInNvdXJjZXMiOlsiL1VzZXJzL3Rvc2gvRG9jdW1lbnRzL1BsYXRmb3JtSU8vUHJvamVjdHMvc3RyYXBpNS9ub2RlX21vZHVsZXMvLnBucG0vQGF3cy1zZGsrc2lnbmF0dXJlLXY0LW11bHRpLXJlZ2lvbkAzLjc1MC4wL25vZGVfbW9kdWxlcy9AYXdzLXNkay9zaWduYXR1cmUtdjQtbXVsdGktcmVnaW9uL2Rpc3QtY2pzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2dldE93blByb3BEZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBfX2dldE93blByb3BOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19uYW1lID0gKHRhcmdldCwgdmFsdWUpID0+IF9fZGVmUHJvcCh0YXJnZXQsIFwibmFtZVwiLCB7IHZhbHVlLCBjb25maWd1cmFibGU6IHRydWUgfSk7XG52YXIgX19leHBvcnQgPSAodGFyZ2V0LCBhbGwpID0+IHtcbiAgZm9yICh2YXIgbmFtZSBpbiBhbGwpXG4gICAgX19kZWZQcm9wKHRhcmdldCwgbmFtZSwgeyBnZXQ6IGFsbFtuYW1lXSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbn07XG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xuICBpZiAoZnJvbSAmJiB0eXBlb2YgZnJvbSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgZnJvbSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZm9yIChsZXQga2V5IG9mIF9fZ2V0T3duUHJvcE5hbWVzKGZyb20pKVxuICAgICAgaWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdClcbiAgICAgICAgX19kZWZQcm9wKHRvLCBrZXksIHsgZ2V0OiAoKSA9PiBmcm9tW2tleV0sIGVudW1lcmFibGU6ICEoZGVzYyA9IF9fZ2V0T3duUHJvcERlc2MoZnJvbSwga2V5KSkgfHwgZGVzYy5lbnVtZXJhYmxlIH0pO1xuICB9XG4gIHJldHVybiB0bztcbn07XG52YXIgX190b0NvbW1vbkpTID0gKG1vZCkgPT4gX19jb3B5UHJvcHMoX19kZWZQcm9wKHt9LCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KSwgbW9kKTtcblxuLy8gc3JjL2luZGV4LnRzXG52YXIgc3JjX2V4cG9ydHMgPSB7fTtcbl9fZXhwb3J0KHNyY19leHBvcnRzLCB7XG4gIFNpZ25hdHVyZVY0TXVsdGlSZWdpb246ICgpID0+IFNpZ25hdHVyZVY0TXVsdGlSZWdpb24sXG4gIHNpZ25hdHVyZVY0Q3J0Q29udGFpbmVyOiAoKSA9PiBzaWduYXR1cmVWNENydENvbnRhaW5lclxufSk7XG5tb2R1bGUuZXhwb3J0cyA9IF9fdG9Db21tb25KUyhzcmNfZXhwb3J0cyk7XG5cbi8vIHNyYy9TaWduYXR1cmVWNE11bHRpUmVnaW9uLnRzXG52YXIgaW1wb3J0X21pZGRsZXdhcmVfc2RrX3MzID0gcmVxdWlyZShcIkBhd3Mtc2RrL21pZGRsZXdhcmUtc2RrLXMzXCIpO1xuXG4vLyBzcmMvc2lnbmF0dXJlLXY0LWNydC1jb250YWluZXIudHNcbnZhciBzaWduYXR1cmVWNENydENvbnRhaW5lciA9IHtcbiAgQ3J0U2lnbmVyVjQ6IG51bGxcbn07XG5cbi8vIHNyYy9TaWduYXR1cmVWNE11bHRpUmVnaW9uLnRzXG52YXIgU2lnbmF0dXJlVjRNdWx0aVJlZ2lvbiA9IGNsYXNzIHtcbiAgc3RhdGljIHtcbiAgICBfX25hbWUodGhpcywgXCJTaWduYXR1cmVWNE11bHRpUmVnaW9uXCIpO1xuICB9XG4gIHNpZ3Y0YVNpZ25lcjtcbiAgc2lndjRTaWduZXI7XG4gIHNpZ25lck9wdGlvbnM7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICB0aGlzLnNpZ3Y0U2lnbmVyID0gbmV3IGltcG9ydF9taWRkbGV3YXJlX3Nka19zMy5TaWduYXR1cmVWNFMzRXhwcmVzcyhvcHRpb25zKTtcbiAgICB0aGlzLnNpZ25lck9wdGlvbnMgPSBvcHRpb25zO1xuICB9XG4gIGFzeW5jIHNpZ24ocmVxdWVzdFRvU2lnbiwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKG9wdGlvbnMuc2lnbmluZ1JlZ2lvbiA9PT0gXCIqXCIpIHtcbiAgICAgIGlmICh0aGlzLnNpZ25lck9wdGlvbnMucnVudGltZSAhPT0gXCJub2RlXCIpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoaXMgcmVxdWVzdCByZXF1aXJlcyBzaWduaW5nIHdpdGggU2lnVjRBc3ltbWV0cmljIGFsZ29yaXRobS4gSXQncyBvbmx5IGF2YWlsYWJsZSBpbiBOb2RlLmpzXCIpO1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0U2lndjRhU2lnbmVyKCkuc2lnbihyZXF1ZXN0VG9TaWduLCBvcHRpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuc2lndjRTaWduZXIuc2lnbihyZXF1ZXN0VG9TaWduLCBvcHRpb25zKTtcbiAgfVxuICAvKipcbiAgICogU2lnbiB3aXRoIGFsdGVybmF0ZSBjcmVkZW50aWFscyB0byB0aGUgb25lcyBwcm92aWRlZCBpbiB0aGUgY29uc3RydWN0b3IuXG4gICAqL1xuICBhc3luYyBzaWduV2l0aENyZWRlbnRpYWxzKHJlcXVlc3RUb1NpZ24sIGNyZWRlbnRpYWxzLCBvcHRpb25zID0ge30pIHtcbiAgICBpZiAob3B0aW9ucy5zaWduaW5nUmVnaW9uID09PSBcIipcIikge1xuICAgICAgaWYgKHRoaXMuc2lnbmVyT3B0aW9ucy5ydW50aW1lICE9PSBcIm5vZGVcIilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyByZXF1ZXN0IHJlcXVpcmVzIHNpZ25pbmcgd2l0aCBTaWdWNEFzeW1tZXRyaWMgYWxnb3JpdGhtLiBJdCdzIG9ubHkgYXZhaWxhYmxlIGluIE5vZGUuanNcIik7XG4gICAgICByZXR1cm4gdGhpcy5nZXRTaWd2NGFTaWduZXIoKS5zaWduV2l0aENyZWRlbnRpYWxzKHJlcXVlc3RUb1NpZ24sIGNyZWRlbnRpYWxzLCBvcHRpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuc2lndjRTaWduZXIuc2lnbldpdGhDcmVkZW50aWFscyhyZXF1ZXN0VG9TaWduLCBjcmVkZW50aWFscywgb3B0aW9ucyk7XG4gIH1cbiAgYXN5bmMgcHJlc2lnbihvcmlnaW5hbFJlcXVlc3QsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChvcHRpb25zLnNpZ25pbmdSZWdpb24gPT09IFwiKlwiKSB7XG4gICAgICBpZiAodGhpcy5zaWduZXJPcHRpb25zLnJ1bnRpbWUgIT09IFwibm9kZVwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIHJlcXVlc3QgcmVxdWlyZXMgc2lnbmluZyB3aXRoIFNpZ1Y0QXN5bW1ldHJpYyBhbGdvcml0aG0uIEl0J3Mgb25seSBhdmFpbGFibGUgaW4gTm9kZS5qc1wiKTtcbiAgICAgIHJldHVybiB0aGlzLmdldFNpZ3Y0YVNpZ25lcigpLnByZXNpZ24ob3JpZ2luYWxSZXF1ZXN0LCBvcHRpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuc2lndjRTaWduZXIucHJlc2lnbihvcmlnaW5hbFJlcXVlc3QsIG9wdGlvbnMpO1xuICB9XG4gIGFzeW5jIHByZXNpZ25XaXRoQ3JlZGVudGlhbHMob3JpZ2luYWxSZXF1ZXN0LCBjcmVkZW50aWFscywgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKG9wdGlvbnMuc2lnbmluZ1JlZ2lvbiA9PT0gXCIqXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk1ldGhvZCBwcmVzaWduV2l0aENyZWRlbnRpYWxzIGlzIG5vdCBzdXBwb3J0ZWQgZm9yIFtzaWduaW5nUmVnaW9uPSpdLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuc2lndjRTaWduZXIucHJlc2lnbldpdGhDcmVkZW50aWFscyhvcmlnaW5hbFJlcXVlc3QsIGNyZWRlbnRpYWxzLCBvcHRpb25zKTtcbiAgfVxuICBnZXRTaWd2NGFTaWduZXIoKSB7XG4gICAgaWYgKCF0aGlzLnNpZ3Y0YVNpZ25lcikge1xuICAgICAgbGV0IENydFNpZ25lclY0ID0gbnVsbDtcbiAgICAgIHRyeSB7XG4gICAgICAgIENydFNpZ25lclY0ID0gc2lnbmF0dXJlVjRDcnRDb250YWluZXIuQ3J0U2lnbmVyVjQ7XG4gICAgICAgIGlmICh0eXBlb2YgQ3J0U2lnbmVyVjQgIT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgZS5tZXNzYWdlID0gYCR7ZS5tZXNzYWdlfVxuUGxlYXNlIGNoZWNrIHdoZXRoZXIgeW91IGhhdmUgaW5zdGFsbGVkIHRoZSBcIkBhd3Mtc2RrL3NpZ25hdHVyZS12NC1jcnRcIiBwYWNrYWdlIGV4cGxpY2l0bHkuIFxuWW91IG11c3QgYWxzbyByZWdpc3RlciB0aGUgcGFja2FnZSBieSBjYWxsaW5nIFtyZXF1aXJlKFwiQGF3cy1zZGsvc2lnbmF0dXJlLXY0LWNydFwiKTtdIG9yIGFuIEVTTSBlcXVpdmFsZW50IHN1Y2ggYXMgW2ltcG9ydCBcIkBhd3Mtc2RrL3NpZ25hdHVyZS12NC1jcnRcIjtdLiBcbkZvciBtb3JlIGluZm9ybWF0aW9uIHBsZWFzZSBnbyB0byBodHRwczovL2dpdGh1Yi5jb20vYXdzL2F3cy1zZGstanMtdjMjZnVuY3Rpb25hbGl0eS1yZXF1aXJpbmctYXdzLWNvbW1vbi1ydW50aW1lLWNydGA7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9XG4gICAgICB0aGlzLnNpZ3Y0YVNpZ25lciA9IG5ldyBDcnRTaWduZXJWNCh7XG4gICAgICAgIC4uLnRoaXMuc2lnbmVyT3B0aW9ucyxcbiAgICAgICAgc2lnbmluZ0FsZ29yaXRobTogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnNpZ3Y0YVNpZ25lcjtcbiAgfVxufTtcbi8vIEFubm90YXRlIHRoZSBDb21tb25KUyBleHBvcnQgbmFtZXMgZm9yIEVTTSBpbXBvcnQgaW4gbm9kZTpcblxuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gIFNpZ25hdHVyZVY0TXVsdGlSZWdpb24sXG4gIHNpZ25hdHVyZVY0Q3J0Q29udGFpbmVyXG59KTtcblxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@aws-sdk+signature-v4-multi-region@3.750.0/node_modules/@aws-sdk/signature-v4-multi-region/dist-cjs/index.js\n");

/***/ })

};
;