"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@payloadcms+db-postgres@3.23.0_@types+react@19.0.7_payload@3.23.0_graphql@16.10.0_monaco-edit_5nd3b7ibvzl4p2oawlx5df2ocy";
exports.ids = ["vendor-chunks/@payloadcms+db-postgres@3.23.0_@types+react@19.0.7_payload@3.23.0_graphql@16.10.0_monaco-edit_5nd3b7ibvzl4p2oawlx5df2ocy"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@payloadcms+db-postgres@3.23.0_@types+react@19.0.7_payload@3.23.0_graphql@16.10.0_monaco-edit_5nd3b7ibvzl4p2oawlx5df2ocy/node_modules/@payloadcms/db-postgres/dist/connect.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+db-postgres@3.23.0_@types+react@19.0.7_payload@3.23.0_graphql@16.10.0_monaco-edit_5nd3b7ibvzl4p2oawlx5df2ocy/node_modules/@payloadcms/db-postgres/dist/connect.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connect: () => (/* binding */ connect)\n/* harmony export */ });\n/* harmony import */ var _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @payloadcms/drizzle */ \"(rsc)/./node_modules/.pnpm/@payloadcms+drizzle@3.23.0_@types+pg@8.10.2_@types+react@19.0.7_payload@3.23.0_graphql@16.10._xeqdoe7hz55w4yqg6krg6dsfwa/node_modules/@payloadcms/drizzle/dist/index.js\");\n/* harmony import */ var drizzle_orm_node_postgres__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm/node-postgres */ \"(rsc)/./node_modules/.pnpm/drizzle-orm@0.36.1_@types+pg@8.10.2_@types+react@19.0.7_pg@8.11.3_react@19.0.0/node_modules/drizzle-orm/node-postgres/driver.js\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pg */ \"(rsc)/./node_modules/.pnpm/pg@8.11.3/node_modules/pg/lib/index.js\");\n\n\n\nconst connectWithReconnect = async function({ adapter, payload, reconnect = false }) {\n    let result;\n    if (!reconnect) {\n        result = await adapter.pool.connect();\n    } else {\n        try {\n            result = await adapter.pool.connect();\n        } catch (ignore) {\n            setTimeout(()=>{\n                payload.logger.info('Reconnecting to postgres');\n                void connectWithReconnect({\n                    adapter,\n                    payload,\n                    reconnect: true\n                });\n            }, 1000);\n        }\n    }\n    if (!result) {\n        return;\n    }\n    result.prependListener('error', (err)=>{\n        try {\n            if (err.code === 'ECONNRESET') {\n                void connectWithReconnect({\n                    adapter,\n                    payload,\n                    reconnect: true\n                });\n            }\n        } catch (ignore) {\n        // swallow error\n        }\n    });\n};\nconst connect = async function connect(options = {\n    hotReload: false\n}) {\n    const { hotReload } = options;\n    this.schema = {\n        pgSchema: this.pgSchema,\n        ...this.tables,\n        ...this.relations,\n        ...this.enums\n    };\n    try {\n        if (!this.pool) {\n            this.pool = new pg__WEBPACK_IMPORTED_MODULE_1__.Pool(this.poolOptions);\n            await connectWithReconnect({\n                adapter: this,\n                payload: this.payload\n            });\n        }\n        const logger = this.logger || false;\n        this.drizzle = (0,drizzle_orm_node_postgres__WEBPACK_IMPORTED_MODULE_2__.drizzle)({\n            client: this.pool,\n            logger,\n            schema: this.schema\n        });\n        if (!hotReload) {\n            if (process.env.PAYLOAD_DROP_DATABASE === 'true') {\n                this.payload.logger.info(`---- DROPPING TABLES SCHEMA(${this.schemaName || 'public'}) ----`);\n                await this.dropDatabase({\n                    adapter: this\n                });\n                this.payload.logger.info('---- DROPPED TABLES ----');\n            }\n        }\n    } catch (err) {\n        if (err.message?.match(/database .* does not exist/i) && !this.disableCreateDatabase) {\n            // capitalize first char of the err msg\n            this.payload.logger.info(`${err.message.charAt(0).toUpperCase() + err.message.slice(1)}, creating...`);\n            const isCreated = await this.createDatabase();\n            if (isCreated) {\n                await this.connect(options);\n                return;\n            }\n        } else {\n            this.payload.logger.error({\n                err,\n                msg: `Error: cannot connect to Postgres. Details: ${err.message}`\n            });\n        }\n        if (typeof this.rejectInitializing === 'function') {\n            this.rejectInitializing();\n        }\n        process.exit(1);\n    }\n    await this.createExtensions();\n    // Only push schema if not in production\n    if ( true && process.env.PAYLOAD_MIGRATING !== 'true' && this.push !== false) {\n        await (0,_payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.pushDevSchema)(this);\n    }\n    if (typeof this.resolveInitializing === 'function') {\n        this.resolveInitializing();\n    }\n    if (false) {}\n};\n\n//# sourceMappingURL=connect.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHBheWxvYWRjbXMrZGItcG9zdGdyZXNAMy4yMy4wX0B0eXBlcytyZWFjdEAxOS4wLjdfcGF5bG9hZEAzLjIzLjBfZ3JhcGhxbEAxNi4xMC4wX21vbmFjby1lZGl0XzVuZDNiN2lidnpsNHAyb2F3bHg1ZGYyb2N5L25vZGVfbW9kdWxlcy9AcGF5bG9hZGNtcy9kYi1wb3N0Z3Jlcy9kaXN0L2Nvbm5lY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNBO0FBQ2hDO0FBQ3BCLDhDQUE4QyxxQ0FBcUM7QUFDbkY7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQSxDQUFDO0FBQ0QsWUFBWSxZQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsb0NBQU87QUFDbkM7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSx1QkFBdUIsa0VBQU87QUFDOUI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSx3RUFBd0UsNEJBQTRCO0FBQ3BHO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSx3Q0FBd0MsMkRBQTJEO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLG9FQUFvRSxZQUFZO0FBQ2hGLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxLQUFxQztBQUM3QyxjQUFjLGtFQUFhO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxLQUE0RCxFQUFFLEVBSWpFO0FBQ0w7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy90b3NoL0RvY3VtZW50cy9QbGF0Zm9ybUlPL1Byb2plY3RzL3N0cmFwaTUvbm9kZV9tb2R1bGVzLy5wbnBtL0BwYXlsb2FkY21zK2RiLXBvc3RncmVzQDMuMjMuMF9AdHlwZXMrcmVhY3RAMTkuMC43X3BheWxvYWRAMy4yMy4wX2dyYXBocWxAMTYuMTAuMF9tb25hY28tZWRpdF81bmQzYjdpYnZ6bDRwMm9hd2x4NWRmMm9jeS9ub2RlX21vZHVsZXMvQHBheWxvYWRjbXMvZGItcG9zdGdyZXMvZGlzdC9jb25uZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHB1c2hEZXZTY2hlbWEgfSBmcm9tICdAcGF5bG9hZGNtcy9kcml6emxlJztcbmltcG9ydCB7IGRyaXp6bGUgfSBmcm9tICdkcml6emxlLW9ybS9ub2RlLXBvc3RncmVzJztcbmltcG9ydCBwZyBmcm9tICdwZyc7XG5jb25zdCBjb25uZWN0V2l0aFJlY29ubmVjdCA9IGFzeW5jIGZ1bmN0aW9uKHsgYWRhcHRlciwgcGF5bG9hZCwgcmVjb25uZWN0ID0gZmFsc2UgfSkge1xuICAgIGxldCByZXN1bHQ7XG4gICAgaWYgKCFyZWNvbm5lY3QpIHtcbiAgICAgICAgcmVzdWx0ID0gYXdhaXQgYWRhcHRlci5wb29sLmNvbm5lY3QoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmVzdWx0ID0gYXdhaXQgYWRhcHRlci5wb29sLmNvbm5lY3QoKTtcbiAgICAgICAgfSBjYXRjaCAoaWdub3JlKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpPT57XG4gICAgICAgICAgICAgICAgcGF5bG9hZC5sb2dnZXIuaW5mbygnUmVjb25uZWN0aW5nIHRvIHBvc3RncmVzJyk7XG4gICAgICAgICAgICAgICAgdm9pZCBjb25uZWN0V2l0aFJlY29ubmVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGFkYXB0ZXIsXG4gICAgICAgICAgICAgICAgICAgIHBheWxvYWQsXG4gICAgICAgICAgICAgICAgICAgIHJlY29ubmVjdDogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICByZXN1bHQucHJlcGVuZExpc3RlbmVyKCdlcnJvcicsIChlcnIpPT57XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoZXJyLmNvZGUgPT09ICdFQ09OTlJFU0VUJykge1xuICAgICAgICAgICAgICAgIHZvaWQgY29ubmVjdFdpdGhSZWNvbm5lY3Qoe1xuICAgICAgICAgICAgICAgICAgICBhZGFwdGVyLFxuICAgICAgICAgICAgICAgICAgICBwYXlsb2FkLFxuICAgICAgICAgICAgICAgICAgICByZWNvbm5lY3Q6IHRydWVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoaWdub3JlKSB7XG4gICAgICAgIC8vIHN3YWxsb3cgZXJyb3JcbiAgICAgICAgfVxuICAgIH0pO1xufTtcbmV4cG9ydCBjb25zdCBjb25uZWN0ID0gYXN5bmMgZnVuY3Rpb24gY29ubmVjdChvcHRpb25zID0ge1xuICAgIGhvdFJlbG9hZDogZmFsc2Vcbn0pIHtcbiAgICBjb25zdCB7IGhvdFJlbG9hZCB9ID0gb3B0aW9ucztcbiAgICB0aGlzLnNjaGVtYSA9IHtcbiAgICAgICAgcGdTY2hlbWE6IHRoaXMucGdTY2hlbWEsXG4gICAgICAgIC4uLnRoaXMudGFibGVzLFxuICAgICAgICAuLi50aGlzLnJlbGF0aW9ucyxcbiAgICAgICAgLi4udGhpcy5lbnVtc1xuICAgIH07XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKCF0aGlzLnBvb2wpIHtcbiAgICAgICAgICAgIHRoaXMucG9vbCA9IG5ldyBwZy5Qb29sKHRoaXMucG9vbE9wdGlvbnMpO1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdFdpdGhSZWNvbm5lY3Qoe1xuICAgICAgICAgICAgICAgIGFkYXB0ZXI6IHRoaXMsXG4gICAgICAgICAgICAgICAgcGF5bG9hZDogdGhpcy5wYXlsb2FkXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsb2dnZXIgPSB0aGlzLmxvZ2dlciB8fCBmYWxzZTtcbiAgICAgICAgdGhpcy5kcml6emxlID0gZHJpenpsZSh7XG4gICAgICAgICAgICBjbGllbnQ6IHRoaXMucG9vbCxcbiAgICAgICAgICAgIGxvZ2dlcixcbiAgICAgICAgICAgIHNjaGVtYTogdGhpcy5zY2hlbWFcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghaG90UmVsb2FkKSB7XG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuUEFZTE9BRF9EUk9QX0RBVEFCQVNFID09PSAndHJ1ZScpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBheWxvYWQubG9nZ2VyLmluZm8oYC0tLS0gRFJPUFBJTkcgVEFCTEVTIFNDSEVNQSgke3RoaXMuc2NoZW1hTmFtZSB8fCAncHVibGljJ30pIC0tLS1gKTtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmRyb3BEYXRhYmFzZSh7XG4gICAgICAgICAgICAgICAgICAgIGFkYXB0ZXI6IHRoaXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLnBheWxvYWQubG9nZ2VyLmluZm8oJy0tLS0gRFJPUFBFRCBUQUJMRVMgLS0tLScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGlmIChlcnIubWVzc2FnZT8ubWF0Y2goL2RhdGFiYXNlIC4qIGRvZXMgbm90IGV4aXN0L2kpICYmICF0aGlzLmRpc2FibGVDcmVhdGVEYXRhYmFzZSkge1xuICAgICAgICAgICAgLy8gY2FwaXRhbGl6ZSBmaXJzdCBjaGFyIG9mIHRoZSBlcnIgbXNnXG4gICAgICAgICAgICB0aGlzLnBheWxvYWQubG9nZ2VyLmluZm8oYCR7ZXJyLm1lc3NhZ2UuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBlcnIubWVzc2FnZS5zbGljZSgxKX0sIGNyZWF0aW5nLi4uYCk7XG4gICAgICAgICAgICBjb25zdCBpc0NyZWF0ZWQgPSBhd2FpdCB0aGlzLmNyZWF0ZURhdGFiYXNlKCk7XG4gICAgICAgICAgICBpZiAoaXNDcmVhdGVkKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5jb25uZWN0KG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucGF5bG9hZC5sb2dnZXIuZXJyb3Ioe1xuICAgICAgICAgICAgICAgIGVycixcbiAgICAgICAgICAgICAgICBtc2c6IGBFcnJvcjogY2Fubm90IGNvbm5lY3QgdG8gUG9zdGdyZXMuIERldGFpbHM6ICR7ZXJyLm1lc3NhZ2V9YFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnJlamVjdEluaXRpYWxpemluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhpcy5yZWplY3RJbml0aWFsaXppbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBwcm9jZXNzLmV4aXQoMSk7XG4gICAgfVxuICAgIGF3YWl0IHRoaXMuY3JlYXRlRXh0ZW5zaW9ucygpO1xuICAgIC8vIE9ubHkgcHVzaCBzY2hlbWEgaWYgbm90IGluIHByb2R1Y3Rpb25cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBwcm9jZXNzLmVudi5QQVlMT0FEX01JR1JBVElORyAhPT0gJ3RydWUnICYmIHRoaXMucHVzaCAhPT0gZmFsc2UpIHtcbiAgICAgICAgYXdhaXQgcHVzaERldlNjaGVtYSh0aGlzKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB0aGlzLnJlc29sdmVJbml0aWFsaXppbmcgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhpcy5yZXNvbHZlSW5pdGlhbGl6aW5nKCk7XG4gICAgfVxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nICYmIHRoaXMucHJvZE1pZ3JhdGlvbnMpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5taWdyYXRlKHtcbiAgICAgICAgICAgIG1pZ3JhdGlvbnM6IHRoaXMucHJvZE1pZ3JhdGlvbnNcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29ubmVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@payloadcms+db-postgres@3.23.0_@types+react@19.0.7_payload@3.23.0_graphql@16.10.0_monaco-edit_5nd3b7ibvzl4p2oawlx5df2ocy/node_modules/@payloadcms/db-postgres/dist/connect.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@payloadcms+db-postgres@3.23.0_@types+react@19.0.7_payload@3.23.0_graphql@16.10.0_monaco-edit_5nd3b7ibvzl4p2oawlx5df2ocy/node_modules/@payloadcms/db-postgres/dist/index.js":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+db-postgres@3.23.0_@types+react@19.0.7_payload@3.23.0_graphql@16.10.0_monaco-edit_5nd3b7ibvzl4p2oawlx5df2ocy/node_modules/@payloadcms/db-postgres/dist/index.js ***!
  \********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   geometryColumn: () => (/* reexport safe */ _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.geometryColumn),\n/* harmony export */   postgresAdapter: () => (/* binding */ postgresAdapter),\n/* harmony export */   sql: () => (/* reexport safe */ drizzle_orm__WEBPACK_IMPORTED_MODULE_9__.sql)\n/* harmony export */ });\n/* harmony import */ var _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @payloadcms/drizzle */ \"(rsc)/./node_modules/.pnpm/@payloadcms+drizzle@3.23.0_@types+pg@8.10.2_@types+react@19.0.7_payload@3.23.0_graphql@16.10._xeqdoe7hz55w4yqg6krg6dsfwa/node_modules/@payloadcms/drizzle/dist/index.js\");\n/* harmony import */ var _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @payloadcms/drizzle/postgres */ \"(rsc)/./node_modules/.pnpm/@payloadcms+drizzle@3.23.0_@types+pg@8.10.2_@types+react@19.0.7_payload@3.23.0_graphql@16.10._xeqdoe7hz55w4yqg6krg6dsfwa/node_modules/@payloadcms/drizzle/dist/exports/postgres.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/.pnpm/drizzle-orm@0.36.1_@types+pg@8.10.2_@types+react@19.0.7_pg@8.11.3_react@19.0.0/node_modules/drizzle-orm/pg-core/schema.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/.pnpm/drizzle-orm@0.36.1_@types+pg@8.10.2_@types+react@19.0.7_pg@8.11.3_react@19.0.0/node_modules/drizzle-orm/pg-core/columns/enum.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/.pnpm/drizzle-orm@0.36.1_@types+pg@8.10.2_@types+react@19.0.7_pg@8.11.3_react@19.0.0/node_modules/drizzle-orm/pg-core/table.js\");\n/* harmony import */ var payload__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! payload */ \"(rsc)/./node_modules/.pnpm/payload@3.23.0_graphql@16.10.0_monaco-editor@0.52.2_react-dom@19.0.0_react@19.0.0__react@19.0.0_typescript@5.7.3/node_modules/payload/dist/database/createDatabaseAdapter.js\");\n/* harmony import */ var payload__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! payload */ \"(rsc)/./node_modules/.pnpm/payload@3.23.0_graphql@16.10.0_monaco-editor@0.52.2_react-dom@19.0.0_react@19.0.0__react@19.0.0_typescript@5.7.3/node_modules/payload/dist/database/defaultBeginTransaction.js\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var _connect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./connect.js */ \"(rsc)/./node_modules/.pnpm/@payloadcms+db-postgres@3.23.0_@types+react@19.0.7_payload@3.23.0_graphql@16.10.0_monaco-edit_5nd3b7ibvzl4p2oawlx5df2ocy/node_modules/@payloadcms/db-postgres/dist/connect.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/.pnpm/drizzle-orm@0.36.1_@types+pg@8.10.2_@types+react@19.0.7_pg@8.11.3_react@19.0.0/node_modules/drizzle-orm/sql/sql.js\");\n\n\n\n\n\n\nconst filename = (0,url__WEBPACK_IMPORTED_MODULE_2__.fileURLToPath)(\"file:///Users/tosh/Documents/PlatformIO/Projects/strapi5/node_modules/.pnpm/@payloadcms+db-postgres@3.23.0_@types+react@19.0.7_payload@3.23.0_graphql@16.10.0_monaco-edit_5nd3b7ibvzl4p2oawlx5df2ocy/node_modules/@payloadcms/db-postgres/dist/index.js\");\nfunction postgresAdapter(args) {\n    const postgresIDType = args.idType || 'serial';\n    const payloadIDType = postgresIDType === 'serial' ? 'number' : 'text';\n    function adapter({ payload }) {\n        const migrationDir = (0,_payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.findMigrationDir)(args.migrationDir);\n        let resolveInitializing;\n        let rejectInitializing;\n        let adapterSchema;\n        const initializing = new Promise((res, rej)=>{\n            resolveInitializing = res;\n            rejectInitializing = rej;\n        });\n        if (args.schemaName) {\n            adapterSchema = (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_4__.pgSchema)(args.schemaName);\n        } else {\n            adapterSchema = {\n                enum: drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__.pgEnum,\n                table: drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_6__.pgTable\n            };\n        }\n        const extensions = (args.extensions ?? []).reduce((acc, name)=>{\n            acc[name] = true;\n            return acc;\n        }, {});\n        return (0,payload__WEBPACK_IMPORTED_MODULE_7__.createDatabaseAdapter)({\n            name: 'postgres',\n            afterSchemaInit: args.afterSchemaInit ?? [],\n            beforeSchemaInit: args.beforeSchemaInit ?? [],\n            createDatabase: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.createDatabase,\n            createExtensions: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.createExtensions,\n            createMigration: (0,_payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.buildCreateMigration)({\n                executeMethod: 'execute',\n                filename,\n                sanitizeStatements ({ sqlExecute, statements }) {\n                    return `${sqlExecute}\\n ${statements.join('\\n')}\\`)`;\n                }\n            }),\n            defaultDrizzleSnapshot: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.defaultDrizzleSnapshot,\n            disableCreateDatabase: args.disableCreateDatabase ?? false,\n            drizzle: undefined,\n            enums: {},\n            extensions,\n            features: {\n                json: true\n            },\n            fieldConstraints: {},\n            generateSchema: (0,_payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.createSchemaGenerator)({\n                columnToCodeConverter: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.columnToCodeConverter,\n                corePackageSuffix: 'pg-core',\n                defaultOutputFile: args.generateSchemaOutputFile,\n                enumImport: 'pgEnum',\n                schemaImport: 'pgSchema',\n                tableImport: 'pgTable'\n            }),\n            idType: postgresIDType,\n            initializing,\n            localesSuffix: args.localesSuffix || '_locales',\n            logger: args.logger,\n            operators: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.operatorMap,\n            pgSchema: adapterSchema,\n            pool: undefined,\n            poolOptions: args.pool,\n            prodMigrations: args.prodMigrations,\n            push: args.push,\n            relations: {},\n            relationshipsSuffix: args.relationshipsSuffix || '_rels',\n            schema: {},\n            schemaName: args.schemaName,\n            sessions: {},\n            tableNameMap: new Map(),\n            tables: {},\n            tablesFilter: args.tablesFilter,\n            transactionOptions: args.transactionOptions || undefined,\n            versionsSuffix: args.versionsSuffix || '_v',\n            // DatabaseAdapter\n            beginTransaction: args.transactionOptions === false ? (0,payload__WEBPACK_IMPORTED_MODULE_8__.defaultBeginTransaction)() : _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.beginTransaction,\n            commitTransaction: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.commitTransaction,\n            connect: _connect_js__WEBPACK_IMPORTED_MODULE_3__.connect,\n            count: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.count,\n            countDistinct: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.countDistinct,\n            countGlobalVersions: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.countGlobalVersions,\n            countVersions: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.countVersions,\n            create: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.create,\n            createGlobal: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.createGlobal,\n            createGlobalVersion: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.createGlobalVersion,\n            createJSONQuery: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.createJSONQuery,\n            createVersion: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.createVersion,\n            defaultIDType: payloadIDType,\n            deleteMany: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.deleteMany,\n            deleteOne: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.deleteOne,\n            deleteVersions: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.deleteVersions,\n            deleteWhere: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.deleteWhere,\n            destroy: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.destroy,\n            dropDatabase: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.dropDatabase,\n            execute: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.execute,\n            find: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.find,\n            findGlobal: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.findGlobal,\n            findGlobalVersions: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.findGlobalVersions,\n            findOne: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.findOne,\n            findVersions: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.findVersions,\n            indexes: new Set(),\n            init: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.init,\n            insert: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.insert,\n            migrate: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrate,\n            migrateDown: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrateDown,\n            migrateFresh: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrateFresh,\n            migrateRefresh: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrateRefresh,\n            migrateReset: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrateReset,\n            migrateStatus: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.migrateStatus,\n            migrationDir,\n            packageName: '@payloadcms/db-postgres',\n            payload,\n            queryDrafts: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.queryDrafts,\n            rawRelations: {},\n            rawTables: {},\n            rejectInitializing,\n            requireDrizzleKit: _payloadcms_drizzle_postgres__WEBPACK_IMPORTED_MODULE_1__.requireDrizzleKit,\n            resolveInitializing,\n            rollbackTransaction: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.rollbackTransaction,\n            updateGlobal: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.updateGlobal,\n            updateGlobalVersion: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.updateGlobalVersion,\n            updateOne: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.updateOne,\n            updateVersion: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.updateVersion,\n            upsert: _payloadcms_drizzle__WEBPACK_IMPORTED_MODULE_0__.updateOne\n        });\n    }\n    return {\n        defaultIDType: payloadIDType,\n        init: adapter\n    };\n}\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@payloadcms+db-postgres@3.23.0_@types+react@19.0.7_payload@3.23.0_graphql@16.10.0_monaco-edit_5nd3b7ibvzl4p2oawlx5df2ocy/node_modules/@payloadcms/db-postgres/dist/index.js\n");

/***/ })

};
;