"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/postgres-interval@1.2.0";
exports.ids = ["vendor-chunks/postgres-interval@1.2.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/postgres-interval@1.2.0/node_modules/postgres-interval/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/postgres-interval@1.2.0/node_modules/postgres-interval/index.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar extend = __webpack_require__(/*! xtend/mutable */ \"(rsc)/./node_modules/.pnpm/xtend@4.0.2/node_modules/xtend/mutable.js\")\n\nmodule.exports = PostgresInterval\n\nfunction PostgresInterval (raw) {\n  if (!(this instanceof PostgresInterval)) {\n    return new PostgresInterval(raw)\n  }\n  extend(this, parse(raw))\n}\nvar properties = ['seconds', 'minutes', 'hours', 'days', 'months', 'years']\nPostgresInterval.prototype.toPostgres = function () {\n  var filtered = properties.filter(this.hasOwnProperty, this)\n\n  // In addition to `properties`, we need to account for fractions of seconds.\n  if (this.milliseconds && filtered.indexOf('seconds') < 0) {\n    filtered.push('seconds')\n  }\n\n  if (filtered.length === 0) return '0'\n  return filtered\n    .map(function (property) {\n      var value = this[property] || 0\n\n      // Account for fractional part of seconds,\n      // remove trailing zeroes.\n      if (property === 'seconds' && this.milliseconds) {\n        value = (value + this.milliseconds / 1000).toFixed(6).replace(/\\.?0+$/, '')\n      }\n\n      return value + ' ' + property\n    }, this)\n    .join(' ')\n}\n\nvar propertiesISOEquivalent = {\n  years: 'Y',\n  months: 'M',\n  days: 'D',\n  hours: 'H',\n  minutes: 'M',\n  seconds: 'S'\n}\nvar dateProperties = ['years', 'months', 'days']\nvar timeProperties = ['hours', 'minutes', 'seconds']\n// according to ISO 8601\nPostgresInterval.prototype.toISOString = PostgresInterval.prototype.toISO = function () {\n  var datePart = dateProperties\n    .map(buildProperty, this)\n    .join('')\n\n  var timePart = timeProperties\n    .map(buildProperty, this)\n    .join('')\n\n  return 'P' + datePart + 'T' + timePart\n\n  function buildProperty (property) {\n    var value = this[property] || 0\n\n    // Account for fractional part of seconds,\n    // remove trailing zeroes.\n    if (property === 'seconds' && this.milliseconds) {\n      value = (value + this.milliseconds / 1000).toFixed(6).replace(/0+$/, '')\n    }\n\n    return value + propertiesISOEquivalent[property]\n  }\n}\n\nvar NUMBER = '([+-]?\\\\d+)'\nvar YEAR = NUMBER + '\\\\s+years?'\nvar MONTH = NUMBER + '\\\\s+mons?'\nvar DAY = NUMBER + '\\\\s+days?'\nvar TIME = '([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?'\nvar INTERVAL = new RegExp([YEAR, MONTH, DAY, TIME].map(function (regexString) {\n  return '(' + regexString + ')?'\n})\n  .join('\\\\s*'))\n\n// Positions of values in regex match\nvar positions = {\n  years: 2,\n  months: 4,\n  days: 6,\n  hours: 9,\n  minutes: 10,\n  seconds: 11,\n  milliseconds: 12\n}\n// We can use negative time\nvar negatives = ['hours', 'minutes', 'seconds', 'milliseconds']\n\nfunction parseMilliseconds (fraction) {\n  // add omitted zeroes\n  var microseconds = fraction + '000000'.slice(fraction.length)\n  return parseInt(microseconds, 10) / 1000\n}\n\nfunction parse (interval) {\n  if (!interval) return {}\n  var matches = INTERVAL.exec(interval)\n  var isNegative = matches[8] === '-'\n  return Object.keys(positions)\n    .reduce(function (parsed, property) {\n      var position = positions[property]\n      var value = matches[position]\n      // no empty string\n      if (!value) return parsed\n      // milliseconds are actually microseconds (up to 6 digits)\n      // with omitted trailing zeroes.\n      value = property === 'milliseconds'\n        ? parseMilliseconds(value)\n        : parseInt(value, 10)\n      // no zeros\n      if (!value) return parsed\n      if (isNegative && ~negatives.indexOf(property)) {\n        value *= -1\n      }\n      parsed[property] = value\n      return parsed\n    }, {})\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdGdyZXMtaW50ZXJ2YWxAMS4yLjAvbm9kZV9tb2R1bGVzL3Bvc3RncmVzLWludGVydmFsL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaLGFBQWEsbUJBQU8sQ0FBQywyRkFBZTs7QUFFcEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsSUFBSTtBQUMxRDtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxJQUFJO0FBQ1QiLCJzb3VyY2VzIjpbIi9Vc2Vycy90b3NoL0RvY3VtZW50cy9QbGF0Zm9ybUlPL1Byb2plY3RzL3N0cmFwaTUvbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RncmVzLWludGVydmFsQDEuMi4wL25vZGVfbW9kdWxlcy9wb3N0Z3Jlcy1pbnRlcnZhbC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxudmFyIGV4dGVuZCA9IHJlcXVpcmUoJ3h0ZW5kL211dGFibGUnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBvc3RncmVzSW50ZXJ2YWxcblxuZnVuY3Rpb24gUG9zdGdyZXNJbnRlcnZhbCAocmF3KSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBQb3N0Z3Jlc0ludGVydmFsKSkge1xuICAgIHJldHVybiBuZXcgUG9zdGdyZXNJbnRlcnZhbChyYXcpXG4gIH1cbiAgZXh0ZW5kKHRoaXMsIHBhcnNlKHJhdykpXG59XG52YXIgcHJvcGVydGllcyA9IFsnc2Vjb25kcycsICdtaW51dGVzJywgJ2hvdXJzJywgJ2RheXMnLCAnbW9udGhzJywgJ3llYXJzJ11cblBvc3RncmVzSW50ZXJ2YWwucHJvdG90eXBlLnRvUG9zdGdyZXMgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBmaWx0ZXJlZCA9IHByb3BlcnRpZXMuZmlsdGVyKHRoaXMuaGFzT3duUHJvcGVydHksIHRoaXMpXG5cbiAgLy8gSW4gYWRkaXRpb24gdG8gYHByb3BlcnRpZXNgLCB3ZSBuZWVkIHRvIGFjY291bnQgZm9yIGZyYWN0aW9ucyBvZiBzZWNvbmRzLlxuICBpZiAodGhpcy5taWxsaXNlY29uZHMgJiYgZmlsdGVyZWQuaW5kZXhPZignc2Vjb25kcycpIDwgMCkge1xuICAgIGZpbHRlcmVkLnB1c2goJ3NlY29uZHMnKVxuICB9XG5cbiAgaWYgKGZpbHRlcmVkLmxlbmd0aCA9PT0gMCkgcmV0dXJuICcwJ1xuICByZXR1cm4gZmlsdGVyZWRcbiAgICAubWFwKGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgdmFyIHZhbHVlID0gdGhpc1twcm9wZXJ0eV0gfHwgMFxuXG4gICAgICAvLyBBY2NvdW50IGZvciBmcmFjdGlvbmFsIHBhcnQgb2Ygc2Vjb25kcyxcbiAgICAgIC8vIHJlbW92ZSB0cmFpbGluZyB6ZXJvZXMuXG4gICAgICBpZiAocHJvcGVydHkgPT09ICdzZWNvbmRzJyAmJiB0aGlzLm1pbGxpc2Vjb25kcykge1xuICAgICAgICB2YWx1ZSA9ICh2YWx1ZSArIHRoaXMubWlsbGlzZWNvbmRzIC8gMTAwMCkudG9GaXhlZCg2KS5yZXBsYWNlKC9cXC4/MCskLywgJycpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB2YWx1ZSArICcgJyArIHByb3BlcnR5XG4gICAgfSwgdGhpcylcbiAgICAuam9pbignICcpXG59XG5cbnZhciBwcm9wZXJ0aWVzSVNPRXF1aXZhbGVudCA9IHtcbiAgeWVhcnM6ICdZJyxcbiAgbW9udGhzOiAnTScsXG4gIGRheXM6ICdEJyxcbiAgaG91cnM6ICdIJyxcbiAgbWludXRlczogJ00nLFxuICBzZWNvbmRzOiAnUydcbn1cbnZhciBkYXRlUHJvcGVydGllcyA9IFsneWVhcnMnLCAnbW9udGhzJywgJ2RheXMnXVxudmFyIHRpbWVQcm9wZXJ0aWVzID0gWydob3VycycsICdtaW51dGVzJywgJ3NlY29uZHMnXVxuLy8gYWNjb3JkaW5nIHRvIElTTyA4NjAxXG5Qb3N0Z3Jlc0ludGVydmFsLnByb3RvdHlwZS50b0lTT1N0cmluZyA9IFBvc3RncmVzSW50ZXJ2YWwucHJvdG90eXBlLnRvSVNPID0gZnVuY3Rpb24gKCkge1xuICB2YXIgZGF0ZVBhcnQgPSBkYXRlUHJvcGVydGllc1xuICAgIC5tYXAoYnVpbGRQcm9wZXJ0eSwgdGhpcylcbiAgICAuam9pbignJylcblxuICB2YXIgdGltZVBhcnQgPSB0aW1lUHJvcGVydGllc1xuICAgIC5tYXAoYnVpbGRQcm9wZXJ0eSwgdGhpcylcbiAgICAuam9pbignJylcblxuICByZXR1cm4gJ1AnICsgZGF0ZVBhcnQgKyAnVCcgKyB0aW1lUGFydFxuXG4gIGZ1bmN0aW9uIGJ1aWxkUHJvcGVydHkgKHByb3BlcnR5KSB7XG4gICAgdmFyIHZhbHVlID0gdGhpc1twcm9wZXJ0eV0gfHwgMFxuXG4gICAgLy8gQWNjb3VudCBmb3IgZnJhY3Rpb25hbCBwYXJ0IG9mIHNlY29uZHMsXG4gICAgLy8gcmVtb3ZlIHRyYWlsaW5nIHplcm9lcy5cbiAgICBpZiAocHJvcGVydHkgPT09ICdzZWNvbmRzJyAmJiB0aGlzLm1pbGxpc2Vjb25kcykge1xuICAgICAgdmFsdWUgPSAodmFsdWUgKyB0aGlzLm1pbGxpc2Vjb25kcyAvIDEwMDApLnRvRml4ZWQoNikucmVwbGFjZSgvMCskLywgJycpXG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlICsgcHJvcGVydGllc0lTT0VxdWl2YWxlbnRbcHJvcGVydHldXG4gIH1cbn1cblxudmFyIE5VTUJFUiA9ICcoWystXT9cXFxcZCspJ1xudmFyIFlFQVIgPSBOVU1CRVIgKyAnXFxcXHMreWVhcnM/J1xudmFyIE1PTlRIID0gTlVNQkVSICsgJ1xcXFxzK21vbnM/J1xudmFyIERBWSA9IE5VTUJFUiArICdcXFxccytkYXlzPydcbnZhciBUSU1FID0gJyhbKy1dKT8oW1xcXFxkXSopOihcXFxcZFxcXFxkKTooXFxcXGRcXFxcZClcXFxcLj8oXFxcXGR7MSw2fSk/J1xudmFyIElOVEVSVkFMID0gbmV3IFJlZ0V4cChbWUVBUiwgTU9OVEgsIERBWSwgVElNRV0ubWFwKGZ1bmN0aW9uIChyZWdleFN0cmluZykge1xuICByZXR1cm4gJygnICsgcmVnZXhTdHJpbmcgKyAnKT8nXG59KVxuICAuam9pbignXFxcXHMqJykpXG5cbi8vIFBvc2l0aW9ucyBvZiB2YWx1ZXMgaW4gcmVnZXggbWF0Y2hcbnZhciBwb3NpdGlvbnMgPSB7XG4gIHllYXJzOiAyLFxuICBtb250aHM6IDQsXG4gIGRheXM6IDYsXG4gIGhvdXJzOiA5LFxuICBtaW51dGVzOiAxMCxcbiAgc2Vjb25kczogMTEsXG4gIG1pbGxpc2Vjb25kczogMTJcbn1cbi8vIFdlIGNhbiB1c2UgbmVnYXRpdmUgdGltZVxudmFyIG5lZ2F0aXZlcyA9IFsnaG91cnMnLCAnbWludXRlcycsICdzZWNvbmRzJywgJ21pbGxpc2Vjb25kcyddXG5cbmZ1bmN0aW9uIHBhcnNlTWlsbGlzZWNvbmRzIChmcmFjdGlvbikge1xuICAvLyBhZGQgb21pdHRlZCB6ZXJvZXNcbiAgdmFyIG1pY3Jvc2Vjb25kcyA9IGZyYWN0aW9uICsgJzAwMDAwMCcuc2xpY2UoZnJhY3Rpb24ubGVuZ3RoKVxuICByZXR1cm4gcGFyc2VJbnQobWljcm9zZWNvbmRzLCAxMCkgLyAxMDAwXG59XG5cbmZ1bmN0aW9uIHBhcnNlIChpbnRlcnZhbCkge1xuICBpZiAoIWludGVydmFsKSByZXR1cm4ge31cbiAgdmFyIG1hdGNoZXMgPSBJTlRFUlZBTC5leGVjKGludGVydmFsKVxuICB2YXIgaXNOZWdhdGl2ZSA9IG1hdGNoZXNbOF0gPT09ICctJ1xuICByZXR1cm4gT2JqZWN0LmtleXMocG9zaXRpb25zKVxuICAgIC5yZWR1Y2UoZnVuY3Rpb24gKHBhcnNlZCwgcHJvcGVydHkpIHtcbiAgICAgIHZhciBwb3NpdGlvbiA9IHBvc2l0aW9uc1twcm9wZXJ0eV1cbiAgICAgIHZhciB2YWx1ZSA9IG1hdGNoZXNbcG9zaXRpb25dXG4gICAgICAvLyBubyBlbXB0eSBzdHJpbmdcbiAgICAgIGlmICghdmFsdWUpIHJldHVybiBwYXJzZWRcbiAgICAgIC8vIG1pbGxpc2Vjb25kcyBhcmUgYWN0dWFsbHkgbWljcm9zZWNvbmRzICh1cCB0byA2IGRpZ2l0cylcbiAgICAgIC8vIHdpdGggb21pdHRlZCB0cmFpbGluZyB6ZXJvZXMuXG4gICAgICB2YWx1ZSA9IHByb3BlcnR5ID09PSAnbWlsbGlzZWNvbmRzJ1xuICAgICAgICA/IHBhcnNlTWlsbGlzZWNvbmRzKHZhbHVlKVxuICAgICAgICA6IHBhcnNlSW50KHZhbHVlLCAxMClcbiAgICAgIC8vIG5vIHplcm9zXG4gICAgICBpZiAoIXZhbHVlKSByZXR1cm4gcGFyc2VkXG4gICAgICBpZiAoaXNOZWdhdGl2ZSAmJiB+bmVnYXRpdmVzLmluZGV4T2YocHJvcGVydHkpKSB7XG4gICAgICAgIHZhbHVlICo9IC0xXG4gICAgICB9XG4gICAgICBwYXJzZWRbcHJvcGVydHldID0gdmFsdWVcbiAgICAgIHJldHVybiBwYXJzZWRcbiAgICB9LCB7fSlcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postgres-interval@1.2.0/node_modules/postgres-interval/index.js\n");

/***/ })

};
;